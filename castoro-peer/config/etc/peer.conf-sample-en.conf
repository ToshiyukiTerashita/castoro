#
# peer.conf - Castoro Peer System Configuration file
#

################################################################################
# Comments
#
# A line beginning with a pound mark # is dealt as a comment line.
; A line beginning with a semi-colon ; is dealt as a comment line, too.

# Parameters that are commented out with a semi-colon in this example file are
# optional while parameters that are not commented out in this example file
# are mandatory.

################################################################################
# File Structure
#
# This configuration file is made up of one global section and one or more 
# service section(s).

################################################################################
[global]

################################################################################
# Hostname
#
# hostname_for_client defines a hostname of this machine to which clients will
# access. This hostname will be sent to Gateway, and then the Gateway will
# send it to client hosts.
#
# The default hostname is determined in the following fashion:
#  ruby -e 'require "socket"; puts Socket::gethostname.split(".")[0]'
#
# If the hostname shown above is suitable, you may leave this item commented out.
#
; hostname_for_client server100

################################################################################
# NIC's IP Address for Multicast and Multicast Address (Gateway)
#
# Peer (cpeerd, crepd, and cmond) emits multicast UDP packets towards Castoro
# Gateways.
#
# gateway_comm_ipaddr_multicast specifies a multicast address to which Peer will 
# send multicast UDP packets towards Gateways.
#
gateway_comm_ipaddr_multicast 239.192.1.1

# A Network Interface Card (NIC)'s IP address on this host through which multicast
# packets are sent is defined here.
#
# The default NIC's IP address is determined by
#  ruby -e 'require "socket"; puts IPSocket::getaddress(Socket::gethostname)'
#
# If the address shown above is suitable, you may leave the following two items
# commented out. Otherwise, you need to specify it by assigning either of them.
#
# gateway_comm_ipaddr_network specifies a network address to which the NIC is connected.
# An IP address of the NIC will be automatically determined.
#
; gateway_comm_ipaddr_network 192.168.1.0/255.255.255.0
; gateway_comm_ipaddr_network 192.168.1.0/24

# gateway_comm_ipaddr_nic explicitly specifies an IP address of the NIC.
#
; gateway_comm_ipaddr_nic 192.168.1.100

################################################################################
# NIC's IP Address for Multicast and Multicast Address (Peer)
#
# Castoro Gateways emits multicast UDP packets towards Peer.
#
# peer_comm_ipaddr_multicast specifies a multicast address to which Gateway will 
# send multicast UDP packets towards Peer.
#
peer_comm_ipaddr_multicast 239.192.1.1

A Network
# Interface Card (NIC)'s IP address on this host through which multicast
# packets are received is defined here.
#
# The default NIC's IP address is determined by
#  ruby -e 'require "socket"; puts IPSocket::getaddress(Socket::gethostname)'
#
# If the address shown above is suitable, you may leave the following two items
# commented out. Otherwise, you need to specify it by assigning either of them.
#
# peer_comm_ipaddr_network specifies a network address to which the NIC is connected.
# An IP address of the NIC will be automatically determined.
#
; peer_comm_ipaddr_network 192.168.1.0/255.255.255.0
; peer_comm_ipaddr_network 192.168.1.0/24

# peer_comm_ipaddr_nic explicitly specifies an IP address of the NIC.
#
; peer_comm_ipaddr_nic 192.168.1.100

################################################################################
# Port Numbers
#
# gateway_learning_udpport_multicast specifies a UDP port number of Gateway to which Peer
# (cpeerd and crepd) sends requests via multicast.
gateway_learning_udpport_multicast            30109

# peer_comm_tcpport specifies a TCP port number to which Peer (cpeerd) listens.
# This port is for requests from client hosts via TCP connection.
peer_comm_tcpport               30111

# peer_comm_udpport_multicast specifies a UDP port number to which Peer (cpeerd) binds.
# This port is for requests from Gateways via UDP multicast.
peer_comm_udpport_multicast               30112

# gateway_watchdog_udpport_multicast specifies a UDP port number of Gateways to which Peer
# (cmond) sends watch-dog packets for Gateways via multicast.
gateway_watchdog_udpport_multicast           30113

# crepd_transmission_tcpport specifies a TCP port number of neighboring 
# Peers to which Peer (crepd) sends replication data and to which Peer (crepd)
# listens to receive replication data from neighboring Peers.
crepd_transmission_tcpport  30148

# crepd_registration_udpport specifies a UDP port number to which Peer (crepd)
# binds. This port is used for internal communication on the Peer. Soon after
# cpeerd has processed a FINALIZE command, it sends a command packet to crepd
# to notify a new basket has been created.
crepd_registration_udpport        30149

# cmond_maintenance_tcpport, cpeerd_maintenance_tcpport, and crepd_maintenance_tcpport 
# specify TCP port numbers to which deamon processes of Peer (cmond, cpeerd, 
# and crepd, respectively) listen. They receive remote maintenance commands 
# from peerctl command via the ports. Additionally, cpeerd and crepd receive
# internal maintainance commands from cmond through this port.
cmond_maintenance_tcpport             30100
cpeerd_maintenance_tcpport            30102
crepd_maintenance_tcpport             30103

# cmond_healthcheck_tcpport, cpeerd_healthcheck_tcpport, and crepd_healthcheck_tcpport 
# specify TCP port numbers to which deamon processes of Peer (cmond, cpeerd, 
# and crepd, respectively) listen. Cmond on this host establishes a connection
# to other cmond running on neighboring Peers to monitor the status of the
# neighbors, vice versa. Additionally, cmond establishes an internal connection
# to both cpeerd and crepd running on this host to monitor their status.
cmond_healthcheck_tcpport             30105
cpeerd_healthcheck_tcpport            30107
crepd_healthcheck_tcpport             30108

################################################################################
# The number of workers for cpeerd
#
# These parameters specify the number of internal workers in the Peer (cpeerd)
cpeerd_number_of_udp_command_processor      10
cpeerd_number_of_tcp_command_processor      10
cpeerd_number_of_basket_status_query_db      10
cpeerd_number_of_csm_controller             3
cpeerd_number_of_udp_response_sender        10
cpeerd_number_of_tcp_response_sender        10
cpeerd_number_of_multicast_command_sender    3
cpeerd_number_of_replication_db_client       1

################################################################################
# Frequency
#
# cmond_period_of_watchdog_sender specifies how often Peer (cmond) emits watch-dog 
# packets towards Gateways. The unit is in seconds.
cmond_period_of_watchdog_sender         4

# cpeerd_period_of_statistics_logger specifies how often internal statistics figures
# are collected in Peer (cpeerd). The unit is in seconds.
cpeerd_period_of_statistics_logger         60

################################################################################
# Peer Group Configuration
#
# config_group_file specifies a file name in which peer groups are defined.
# Hostnames in the file are a logical hostname appearing in the log file.
config_group_file         /etc/castoro/storage_groups.json

# config_host_file specifies a file name in which logical hostnames and their
# corresponding physical hostnames are defined. A physical hostname is the
# hostname to which Peer (crepd) establishs a connection and replicates baskets.
config_host_file          /etc/castoro/storage_hosts.yml

################################################################################
# Effective User ID
#
# effective_user specifies an effective user id. Deamon processes of Peer 
# (cmond, cpeerd, and cmond) runs as this user id. 
# If they are invoked as a root user, they will change their effective user 
# id from root to this effective user id. If those daemon processes are invoked
# as a normal user, they will not change their user id.
effective_user             castoro

################################################################################
# Replication
#
# crepd_transmission_data_unit_size specifies the size of transmission data
# being sent at a time. If the size of file being sent is greater than this
# size, several continuous transmissions will be carried out to transfer all
# data in the file. The unit is in bytes.
crepd_transmission_data_unit_size     1048576

# crepd_number_of_replication_sender specifies the number of internal workers in the
# Peer (crepd).
crepd_number_of_replication_sender         3

################################################################################
# Castoro Manipulator
#
# manipulator_in_use specifies whether Castoro Manipulator daemon is used.
manipulator_in_use      yes

# manipulator_socket specifies a UNIX socket file. The socket file is created
# by the Castoro Manipulator daemon process. Both cpeerd and crepd use this
# socket file to communicate with Castoro Manipulator daemon.
manipulator_socket         /var/castoro/manipulator.sock

################################################################################
# Storage
#
# basket_basedir specifies a base directory of storage area
basket_basedir /expdsk

# The following parameters specify user id, group id, and permission bits for 
# working directory.
# "basket_basedir/type/baskets/w/..."
dir_w_user   castoro
dir_w_group  castoro
dir_w_perm   0777

# The following parameters specify user id, group id, and permission bits for 
# archive directory.
# "basket_basedir/type/baskets/a/..."
dir_a_user   root
dir_a_group  castoro
dir_a_perm   0555

# The following parameters specify user id, group id, and permission bits for
# the directory where deleted files are stored.
# "basket_basedir/type/offline/deleted/..."
dir_d_user   root
dir_d_group  castoro
dir_d_perm   0555

# The following parameters specify user id, group id, and permission bits for
# the directory where canceled files are stored.
# "basket_basedir/type/offline/canceled/..."
dir_c_user   root
dir_c_group  castoro
dir_c_perm   0555

################################################################################
[service]

# service_name specifies a service name. This name distinguishes services.
# Any arbitrary name is acceptable.
service_name service1

# type_id_ranges specifies a value or range of type-id that this service uses.
# By delimiting with a comma, you may specify several values and ranges.
# Examples:
#   0,1,2
#   0-999
#   0-999, 2000, 3000-3999
type_id_ranges 0-999

# basket_keyconverter specifies a name of Basket Key Converter Module
# There are two modules available:
#   Dec40Seq - decimal number, 40bit content-id, sequencial-content-id-tuned
#   Hex64Seq - hexdecimal number, 64bit content-id, sequencial-content-id-tuned
basket_keyconverter Dec40Seq

################################################################################
; [service]

# service_name specifies a service name. This name distinguishes services.
# Any arbitrary name is acceptable.
; service_name service2

# type_id_ranges specifies a value or range of type-id that this service uses.
# By delimiting with a comma, you may specify several values and ranges.
# Examples:
#   0,1,2
#   0-999
#   0-999, 2000, 3000-3999
; type_id_ranges 1000-1999

# basket_keyconverter specifies a name of Basket Key Converter Module
# There are two modules available:
#   Dec40Seq - decimal number, 40bit content-id, sequencial-content-id-tuned
#   Hex64Seq - hexdecimal number, 64bit content-id, sequencial-content-id-tuned
; basket_keyconverter Hex64Seq

################################################################################
